{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abail\\\\my-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport ModalPage from \"./components/ModalPage\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      actors: [],\n      isTheModalOn: false,\n      selectedActor: []\n    };\n    this.handalModal = this.handalModal.bind(this);\n  }\n\n  async componentDidMount() {\n    const URL = \"https://api.themoviedb.org/3/person/popular?api_key=99b7e54dffb135e088fc5567896050e7&language=en\";\n\n    try {\n      const resp = await fetch(URL);\n      const data = await resp.json();\n      this.setState({\n        actors: data.results\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  toggleModal(id) {\n    this.setState({\n      isTheModalOn: true\n    });\n    const selectedActor = this.state.actors.filter(actor => actor.id === id);\n    this.setState({\n      selectedActor\n    });\n  }\n\n  handalModal(status) {\n    this.setState({\n      isTheModalOn: status\n    });\n  }\n\n  render() {\n    const {\n      actors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movies\",\n          children: actors.map(actor => {\n            const {\n              name,\n              profile_path,\n              known_for,\n              id\n            } = actor;\n            const details = known_for.map(movie => movie.title);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actor\",\n              onClick: () => this.toggleModal(id),\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"https://image.tmdb.org/t/p/w500/\" + profile_path,\n                  className: \"image-actor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: details.join(\",\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), this.state.isTheModalOn ? /*#__PURE__*/_jsxDEV(ModalPage, {\n          handalModal: this.handalModal,\n          dataActor: this.state.selectedActor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 38\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/abail/my-app/src/App.js"],"names":["React","ModalPage","App","Component","constructor","state","actors","isTheModalOn","selectedActor","handalModal","bind","componentDidMount","URL","resp","fetch","data","json","setState","results","err","console","log","toggleModal","id","filter","actor","status","render","map","name","profile_path","known_for","details","movie","title","join"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ModalPage from \"./components/ModalPage\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      actors: [],\n      isTheModalOn:false,\n      selectedActor:[]\n    };\n    \n    this.handalModal = this.handalModal.bind(this)\n  }\n\n  async componentDidMount() {\n    const URL =\n      \"https://api.themoviedb.org/3/person/popular?api_key=99b7e54dffb135e088fc5567896050e7&language=en\";\n    try {\n      const resp = await fetch(URL);\n      const data = await resp.json();\n      this.setState({ actors: data.results });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n\n  toggleModal(id){\n    this.setState({isTheModalOn:true})\n    const selectedActor =  this.state.actors.filter((actor)=> actor.id === id)\n    this.setState({selectedActor})\n  }\n\n  handalModal(status){\n    this.setState({isTheModalOn:status})\n  }\n\n  render() {\n    const { actors } = this.state;\n\n    return (\n      <>\n        <div className=\"app\">\n          <div className=\"movies\">\n            {actors.map((actor) => {\n              const { name, profile_path, known_for,id } = actor;\n              const details = known_for.map((movie)=>movie.title)\n              return (\n                <div className=\"actor\" onClick={()=>this.toggleModal(id)}>\n                  <figure>\n                  \n                    <img\n                      src={\"https://image.tmdb.org/t/p/w500/\"\n                       + profile_path}\n                      className=\"image-actor\"\n                    />\n                  </figure>\n                  <h2>{name}</h2>\n                  <p>{details.join(\",\")}</p>\n                </div>\n              );\n            })}\n          </div>\n          {this.state.isTheModalOn ? <ModalPage handalModal={this.handalModal} dataActor={this.state.selectedActor} /> : null}\n        </div>\n        \n      </>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abail\\\\my-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport ModalPage from \"./components/ModalPage\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      actors: [],\n      isTheModalOn: false,\n      selectedActor: []\n    };\n  }\n\n  async componentDidMount() {\n    const URL = \"https://api.themoviedb.org/3/person/popular?api_key=99b7e54dffb135e088fc5567896050e7&language=en\";\n\n    try {\n      const resp = await fetch(URL);\n      const data = await resp.json();\n      this.setState({\n        actors: data.results\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  toggleModal(id) {\n    this.setState({\n      isTheModalOn: true\n    });\n    const selectedActor = this.state.actors.filter(actor => actor.id === id);\n    this.setState({\n      selectedActor\n    });\n  }\n\n  render() {\n    const {\n      actors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movies\",\n          children: [actors.map(actor => {\n            const {\n              name,\n              profile_path,\n              known_for,\n              id\n            } = actor;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"actor\",\n              onClick: () => this.toggleModal(id),\n              children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"https://image.tmdb.org/t/p/w500/\" + profile_path,\n                  className: \"image-actor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: details.join(' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 20\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.isTheModalOn ? /*#__PURE__*/_jsxDEV(ModalPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 40\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/abail/my-app/src/App.js"],"names":["React","ModalPage","App","Component","constructor","state","actors","isTheModalOn","selectedActor","componentDidMount","URL","resp","fetch","data","json","setState","results","err","console","log","toggleModal","id","filter","actor","render","map","name","profile_path","known_for","details","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;;;;AAIA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAY;AACVC,MAAAA,MAAM,EAAC,EADG;AAEVC,MAAAA,YAAY,EAAC,KAFH;AAGVC,MAAAA,aAAa,EAAC;AAHJ,KAAZ;AAKD;;AAEsB,QAAjBC,iBAAiB,GAAE;AACvB,UAAMC,GAAG,GAAG,kGAAZ;;AACD,QAAI;AACH,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAxB;AACA,YAAMG,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,MAAM,EAACO,IAAI,CAACG;AAAb,OAAd;AACA,KAJD,CAIC,OAAMC,GAAN,EAAU;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AAED;;AACDG,EAAAA,WAAW,CAACC,EAAD,EAAI;AACb,SAAKN,QAAL,CAAc;AAACR,MAAAA,YAAY,EAAC;AAAd,KAAd;AACA,UAAMC,aAAa,GAAG,KAAKH,KAAL,CAAWC,MAAX,CAAkBgB,MAAlB,CAA0BC,KAAD,IAAWA,KAAK,CAACF,EAAN,KAAWA,EAA/C,CAAtB;AACA,SAAKN,QAAL,CAAc;AAACP,MAAAA;AAAD,KAAd;AAID;;AACDgB,EAAAA,MAAM,GAAE;AACN,UAAM;AAAClB,MAAAA;AAAD,QAAW,KAAKD,KAAtB;AAEA,wBACE;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BAEE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,qBACGC,MAAM,CAACmB,GAAP,CAAYF,KAAD,IAAS;AACnB,kBAAM;AAAEG,cAAAA,IAAF;AAAOC,cAAAA,YAAP;AAAoBC,cAAAA,SAApB;AAA8BP,cAAAA;AAA9B,gBAAqCE,KAA3C;AAEA,gCAAO;AAAK,cAAA,SAAS,EAAC,OAAf;AAAsB,cAAA,OAAO,EAAE,MAAM,KAAKH,WAAL,CAAiBC,EAAjB,CAArC;AAAA,sCACL;AAAA,uCACE;AAAK,kBAAA,GAAG,EAAE,qCAAmCM,YAA7C;AAA2D,kBAAA,SAAS,EAAC;AAArE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADK,eAIL;AAAA,0BAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,sBAJK,eAKL;AAAA,0BAAIG,OAAO,CAACC,IAAR,CAAa,GAAb;AAAJ;AAAA;AAAA;AAAA;AAAA,sBALK;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAQD,WAXA,CADH,eAaE;AAAA,sBACG,KAAKzB,KAAL,CAAWE,YAAX,gBAA0B,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,oBAA1B,GAAuC;AAD1C;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADA,qBADF;AAyBD;;AAzD8B;;AA4DjC,eAAeL,GAAf","sourcesContent":["import React from \"react\";\nimport ModalPage from \"./components/ModalPage\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state ={\n      actors:[],\n      isTheModalOn:false,\n      selectedActor:[]\n    };\n  }\n\n  async componentDidMount(){\n    const URL = \"https://api.themoviedb.org/3/person/popular?api_key=99b7e54dffb135e088fc5567896050e7&language=en\"\n   try {\n    const resp = await fetch(URL)\n    const data = await resp.json()\n    this.setState({actors:data.results})\n   }catch(err){\n     console.log(err);\n   }\n     \n  }\n  toggleModal(id){\n    this.setState({isTheModalOn:true})\n    const selectedActor = this.state.actors.filter((actor) => actor.id===id)\n    this.setState({selectedActor})\n\n\n  \n  }\n  render(){\n    const {actors} = this.state\n\n    return(\n      <>\n      <div className='app'>\n\n        <div className='movies'>\n          {actors.map((actor)=>{\n            const { name,profile_path,known_for,id } = actor\n           \n            return(<div className='actor'onClick={() => this.toggleModal(id)}>\n              <figure>\n                <img src={\"https://image.tmdb.org/t/p/w500/\"+profile_path} className=\"image-actor\" />\n              </figure>\n              <h2>{name}</h2>\n              <p>{details.join(' ')}</p>\n            \n            </div>)\n          })}\n          <div>\n            {this.state.isTheModalOn ? <ModalPage/>:null}\n          </div>\n\n        </div>\n      </div>\n      </>\n    )\n  }\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}